version: '3.8'

services:
  # PHP-FPM Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      - mysql
    restart: unless-stopped
    volumes:              #in production this should be removed
      - ./server:/var/www/html   #in production this should be removed
    networks:
      - backend-network

  # Optional: for Queue Worker 
  queue-worker:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: queue-worker
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - backend-network
    command: php artisan queue:work

  # Nginx Service
  nginx:
    image: nginx:latest
    container_name: backend-nginx-server
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html 
      - ./nginx.conf:/etc/nginx/conf.d/default.conf 
    depends_on:
      - backend
    networks:
      - backend-network

  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: backend-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - backend-network
    volumes:
      - /var/lib/mysql

  #redis server
  redis:
      image: redis:alpine
      container_name: backend-redis
      restart: unless-stopped
      ports:
        - "6379:6379"
      networks:
        - backend-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev

# Docker Network
networks:
  backend-network:
    driver: bridge